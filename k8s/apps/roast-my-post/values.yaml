# Roast My Post Helm Chart Values

# Domain configuration
hosts:
  - roastmypost.org

# Image configuration
image:
  name: ghcr.io/quantified-uncertainty/roast-my-post
  tag: "main" # Set by CI/CD
  
# Worker image configuration (uses different Dockerfile)
workerImage:
  name: ghcr.io/quantified-uncertainty/roast-my-post-worker
  tag: "main" # Set by CI/CD

# Environment variables from Kubernetes secret
envSecret: roast-my-post-env

# Port configuration
port: 3000

# Web deployment configuration
web:
  replicas: 2  # Reduced from 3 to save memory
  resources:
    requests:
      memory: "512Mi"  # Reduced from 1Gi
      cpu: "250m"     # Reduced from 500m
    limits:
      memory: "1Gi"   # Reduced from 2Gi
      cpu: "500m"     # Reduced from 1000m
  autoscaling:
    enabled: true
    minReplicas: 2  # Reduced from 3 to match replicas
    maxReplicas: 6  # Reduced from 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

# Worker deployment configuration
worker:
  enabled: true
  replicas: 2
  resources:
    requests:
      memory: "1Gi"    # Generous allocation for growth
      cpu: "250m"
    limits:
      memory: "1.5Gi"  # Increased limit to allow headroom
      cpu: "500m"
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 5
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

# Database migration job
migration:
  enabled: false  # Migrations handled via GitHub Actions
  backoffLimit: 3

# Health check configuration
healthCheck:
  path: /api/health
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3

# Service configuration
service:
  type: ClusterIP
  port: 80
  targetPort: 3000

# Ingress configuration
ingress:
  enabled: true
  className: nginx
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
  tls:
    enabled: true