apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-guesstimate-server
  labels:
    app: {{ .Release.Name }}-guesstimate-server
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 4000
  selector:
    app: {{ .Release.Name }}-guesstimate-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-guesstimate-server
  labels:
    app: {{ .Release.Name }}-guesstimate-server
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}-guesstimate-server
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-guesstimate-server
    spec:
      containers:
        - name: server
          image: "quri/guesstimate-server:{{ .Values.tag }}"
          imagePullPolicy: IfNotPresent
          # env:
          ports:
            - containerPort: 4000
          livenessProbe:
            httpGet:
              path: /
              port: 4000
            initialDelaySeconds: 120
            timeoutSeconds: 30
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /
              port: 4000
            initialDelaySeconds: 30
            timeoutSeconds: 3
            periodSeconds: 5
          resources:
            requests:
              memory: "100Mi"
            limits:
              memory: "1024Mi"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-guesstimate-server
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  ingressClassName: nginx
  rules:
  - host: {{ .Values.host }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: {{ .Release.Name }}-guesstimate-server
            port:
              number: 80
  tls:
  - hosts:
    - {{ .Values.host }}
    secretName: {{ .Release.Name }}-guesstimate-server-tls
