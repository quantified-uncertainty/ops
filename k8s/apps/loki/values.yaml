# Loki subchart configuration
loki:
  loki:
    # https://github.com/grafana/loki/issues/9756#issuecomment-1918895042
    auth_enabled: false
    storage:
      # env from secrets, idea from https://community.grafana.com/t/storing-s3-accesskeyid-and-secretaccesskey-securely/92133/3
      bucketNames:
        chunks: "${LOKI_S3_BUCKETNAME}"
        ruler: "${LOKI_S3_BUCKETNAME}"
        admin: "${LOKI_S3_BUCKETNAME}"
      s3:
        endpoint: "${LOKI_S3_ENDPOINT}"
        accessKeyId: "${LOKI_S3_ACCESKEYID}"
        secretAccessKey: "${LOKI_S3_SECRETACCESSKEY}"
        s3ForcePathStyle: true
  singleBinary:
    replicas: 1
    extraArgs:
      - '-config.expand-env=true'
    extraEnv:
      - name: LOKI_S3_BUCKETNAME
        valueFrom:
          secretKeyRef:
            name: loki-storage-secrets
            key: s3-bucketName
      - name: LOKI_S3_ENDPOINT
        valueFrom:
          secretKeyRef:
            name: loki-storage-secrets
            key: s3-endpoint
      - name: LOKI_S3_ACCESKEYID
        valueFrom:
          secretKeyRef:
            name: loki-storage-secrets
            key: s3-accessKeyId
      - name: LOKI_S3_SECRETACCESSKEY
        valueFrom:
          secretKeyRef:
            name: loki-storage-secrets
            key: s3-secretAccessKey
  monitoring:
    selfMonitoring:
      # This tries to install Grafana Agent, which installs CRDs which can overlap
      # with our main Prometheus installation. Also, it doesn't seem that useful.
      enabled: false
      grafanaAgent:
        installOperator: false
  test:
    enabled: false

# TODO - configure retention

# Promtail subchart configuration
promtail:
  config:
    # publish data to Loki
    clients:
      - url: http://loki-gateway/loki/api/v1/push
        tenant_id: 1
