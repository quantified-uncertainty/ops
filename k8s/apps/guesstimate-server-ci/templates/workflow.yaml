apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: guesstimate-server-ci
spec:
  serviceAccountName: guesstimate-server-ci
  entrypoint: all
  templates:
  - name: all
    steps:
    - - name: obtain-github-token
        template: obtain-github-token
    - - name: build-and-push
        template: build-and-push
        arguments:
          parameters:
          - name: docker-config
            value: "{{`{{ steps.obtain-github-token.outputs.parameters.docker-config }}`}}"
    - - name: apply-argocd-application
        template: apply-argocd-application

  - name: obtain-github-token
    container:
      image: node:latest
      workingDir: /tmp
      env:
      - name: PRIVATE_KEY
        valueFrom:
          secretKeyRef:
            name: quri-integrations-github-app
            key: private-key
      - name: APP_ID
        valueFrom:
          secretKeyRef:
            name: quri-integrations-github-app
            key: app-id
      - name: INSTALLATION_ID
        valueFrom:
          secretKeyRef:
            name: quri-integrations-github-app
            key: getguesstimate-installation-id
      command: [sh, -c]
      args:
      - |
        npm install @octokit/auth-app

        cat <<EOF > script.js
        const { createAppAuth } = require("@octokit/auth-app");
        const auth = createAppAuth({ appId: process.env.APP_ID, privateKey: process.env.PRIVATE_KEY });
        auth({
          type: "installation",
          installationId: process.env.INSTALLATION_ID,
        }).then(appAuthentication => console.log(appAuthentication.token));
        EOF

        node script.js >/tmp/github-token

        DOCKER_CONFIG_AUTH=$(echo -n unused:$(cat /tmp/github-token) | base64)
        echo '{ "auths": { "ghcr.io": { "auth": "'$DOCKER_CONFIG_AUTH'" } } }' >/tmp/docker-config.json
    outputs:
      parameters:
      - name: github-token
        valueFrom:
          path: /tmp/github-token
      - name: docker-config
        valueFrom:
          path: /tmp/docker-config.json

  - name: build-and-push
    inputs:
      parameters:
      - name: docker-config
      artifacts:
      - name: source
        path: /workspace
        git:
          repo: {{ .Values.git.repo }}
          revision: {{ .Values.git.revision }}
      - name: docker-config
        path: /kaniko/.docker/config.json
        raw:
          data: "{{`{{ inputs.parameters.docker-config }}`}}"
    container:
      image: gcr.io/kaniko-project/executor:latest
      args: ["--destination=getguesstimate/guesstimate-server",
             "--skip-default-registry-fallback",
             "--verbosity=debug"] # TODO - tag

  - name: apply-argocd-application
    resource:
      action: apply
      # TODO:
      # - app name based on git branch
      # - remove app if branch is deleted
      # - correct image tag
      manifest: |-
        apiVersion: argoproj.io/v1alpha1
        kind: Application
        metadata:
          name: guesstimate-server
          namespace: argocd
        spec:
          syncPolicy:
            automated:
              prune: true
          source:
            repoURL: 'https://github.com/quantified-uncertainty/ops'
            path: k8s/apps/guesstimate-server
            targetRevision: HEAD
            helm:
              valuesObject:
                version: "image-tag"
