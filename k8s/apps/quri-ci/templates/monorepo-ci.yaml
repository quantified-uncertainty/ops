# Similar to common-ci, but adapted for monorepos, which have to build multiple images.
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: monorepo-ci
spec:
  serviceAccountName: quri-ci
  entrypoint: main

  templates:
  - name: main
    inputs:
      parameters:
      - name: github-org
        default: quantified-uncertainty # either `quantified-uncertainty` or `getguesstimate`

      - name: repo
        # required

      - name: branch
        default: main

      - name: packages
        # Required; should be a JSON string containing a list of packages. Example:
        # [ { "image": "foo", "directory": "packages/foo" }, { "image": "bar", "directory": "packages/bar" } ]
        #
        # All listed images will be built by docker-build step, then deployed by apply-argocd-application step.
        # So the list of images must include all names that the application manifests will reference.

      - name: argo-app
        # required

      - name: argo-namespace
        default: null # defaults to parameters.argo-app

    steps:
    - - name: build
        templateRef:
          name: docker-build
          template: main
        arguments:
          parameters:
          - name: github-org
            value: "{{`{{ inputs.parameters.github-org }}`}}"
          - name: repo
            value: "{{`{{ inputs.parameters.repo }}`}}"
          - name: branch
            value: "{{`{{ inputs.parameters.branch }}`}}"
          - name: image-name
            value: "{{`{{ item.image }}`}}"
          - name: directory
            value: "{{`{{= item.directory ?? '' }}`}}"
          - name: dockerfile
            value: "{{`{{ item.dockerfile }}`}}"
        withParam: "{{`{{ inputs.parameters.packages }}`}}"

    # TODO - send GitHub check

    - - name: deploy
        templateRef:
          name: apply-argocd-application
          template: main
        arguments:
          parameters:
          - name: name
            value: "{{`{{ inputs.parameters.argo-app }}`}}"
          - name: namespace
            value: "{{`{{ inputs.parameters.argo-namespace }}`}}"
          - name: image-tag
            # use exact git revision, not just branch name that could change - this will help with rollbacks and debugging
            value: "{{`{{ steps.build.outputs.parameters.git-revision }}`}}"

    # TODO - send Slack notification
